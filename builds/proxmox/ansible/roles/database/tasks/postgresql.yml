---
# PostgreSQL installation and configuration

- name: Add PostgreSQL APT repository key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present
  when: ansible_os_family == "Debian"

- name: Add PostgreSQL APT repository
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
    state: present
    filename: pgdg
  when: ansible_os_family == "Debian"

- name: Install PostgreSQL
  apt:
    name:
      - "postgresql-{{ db_version }}"
      - "postgresql-contrib-{{ db_version }}"
      - postgresql-client
      - python3-psycopg2
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Ensure PostgreSQL is started and enabled
  service:
    name: postgresql
    state: started
    enabled: true

- name: Configure PostgreSQL to listen on all interfaces
  lineinfile:
    path: "/etc/postgresql/{{ db_version }}/main/postgresql.conf"
    regexp: '^#?listen_addresses'
    line: "listen_addresses = '{{ postgresql_listen_addresses }}'"
    state: present
  notify: restart postgresql
  when: postgresql_listen_addresses != 'localhost'

- name: Configure PostgreSQL authentication
  lineinfile:
    path: "/etc/postgresql/{{ db_version }}/main/pg_hba.conf"
    line: "host    all             all             {{ item }}            md5"
    state: present
  loop: "{{ postgresql_allowed_networks }}"
  notify: restart postgresql
  when: postgresql_allowed_networks | length > 0

- name: Set PostgreSQL max connections
  lineinfile:
    path: "/etc/postgresql/{{ db_version }}/main/postgresql.conf"
    regexp: '^#?max_connections'
    line: "max_connections = {{ postgresql_max_connections }}"
    state: present
  notify: restart postgresql

- name: Set PostgreSQL shared buffers
  lineinfile:
    path: "/etc/postgresql/{{ db_version }}/main/postgresql.conf"
    regexp: '^#?shared_buffers'
    line: "shared_buffers = {{ postgresql_shared_buffers }}"
    state: present
  notify: restart postgresql

- name: Create PostgreSQL databases
  postgresql_db:
    name: "{{ item.name }}"
    encoding: "{{ item.encoding | default('UTF8') }}"
    lc_collate: "{{ item.lc_collate | default('en_US.UTF-8') }}"
    lc_ctype: "{{ item.lc_ctype | default('en_US.UTF-8') }}"
    template: "{{ item.template | default('template0') }}"
    state: present
  become: true
  become_user: postgres
  loop: "{{ postgresql_databases }}"
  when: postgresql_databases | length > 0

- name: Create PostgreSQL users
  postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    role_attr_flags: "{{ item.role_attr_flags | default('') }}"
    state: present
  become: true
  become_user: postgres
  loop: "{{ postgresql_users }}"
  when: postgresql_users | length > 0
  no_log: true

- name: Grant database privileges to users
  postgresql_privs:
    database: "{{ item.database }}"
    roles: "{{ item.user }}"
    privs: "{{ item.privs | default('ALL') }}"
    type: database
    state: present
  become: true
  become_user: postgres
  loop: "{{ postgresql_privileges }}"
  when: postgresql_privileges | length > 0
